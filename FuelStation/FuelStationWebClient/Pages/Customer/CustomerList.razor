@inject HttpClient httpClient
@using System.Net.Http
@inject NavigationManager navigationManager
@using System.Net.Http.Json
@using FuelStation.DTO.Customer;
@inject IJSRuntime jsRuntime
@page "/customerlist"

<PageTitle>Customers</PageTitle>

<h3>Customers</h3>

@if (isLoading) {
    <div class="spinner-border text-secondary" role="status">
        <span class="sr-only"></span>
    </div>
} else {
    <BootstrapButton ButtonType = "BootstrapButtonType.Success" OnClick="CreateItem">Create</BootstrapButton>

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Code</th>
                <th>Description</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customerList) {
                <tr>
                    <td>@customer.Name</td>
                    <td>@customer.Surname</td>
                    <td>@customer.CardNumber</td>
                    <td>
                        <BootstrapButton ButtonType = "BootstrapButtonType.Warning" OnClick="()=> EditItem(customer)">Edit</BootstrapButton>
                        <BootstrapButton ButtonType = "BootstrapButtonType.Primary" OnClick="()=> DetailItem(customer)">Details</BootstrapButton>
                        <BootstrapButton ButtonType = "BootstrapButtonType.Danger" OnClick="()=> DeleteItem(customer)">Delete</BootstrapButton>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<CustomerListDto> customerList = new();
    private bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync() {
        await LoadItemsFromServer();
        isLoading = false;
    }

    private async Task LoadItemsFromServer() {
        var tempCustomerList = await httpClient.GetFromJsonAsync<List<CustomerListDto>>("Customer");
        if (tempCustomerList is not null) {
            customerList = tempCustomerList;
        } else {
            // TODO: if tempCustomerList is null
        }
    }
}
