@page "/employeelist/details/{Id:int?}"
@using FuelStation.Blazor.Shared.DTO.Employee;
@using FuelStation.Model.Enums;
@using Microsoft.AspNetCore.Authorization;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@attribute [Authorize(Roles = "Manager")]


<h3>Employee Details</h3>
<PageTitle>Employee Details</PageTitle>


@if (Employee == null) {
    <div class="spinner-border text-secondary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
} else {
        <div class="row">
            <div class="col-md-2">
                <label class="form-label">Name</label>
            <InputText class="form-control" @bind-Value="@Employee.Name" disabled />
            </div>
            <div class="col-md-2">
                <label class="form-label">Surname</label>
            <InputText class="form-control" @bind-Value="@Employee.Surname" disabled />
            </div>
            <div class="col-md-2">
                <label class="form-label">Employee Type</label>
                <InputSelect class="form-control" @bind-Value="@Employee.Type" disabled>
                    @foreach (var employeetype in Enum.GetValues<EmployeeType>()) {
                        <option value="@employeetype">@employeetype</option>
                    }
                </InputSelect>
            </div>
            <div class="col-md-2">
                <label class="form-label">Salary</label>
            <InputNumber class="form-control" @bind-Value="@Employee.SalaryPerMonth" disabled />
            </div>
            <div class="col-md-2">
                <label class="form-label">Hire Start Date</label>
                <InputDate class="form-control" @bind-Value="@Employee.HireDateStart" disabled/>
            </div>
            <div class="col-md-2">
                <label class="form-label">Hire End Date</label>
            <InputDate class="form-control" @bind-Value="@Employee.HireDateEnd" disabled />
            </div>
            
            <div class="row mt-2">
                <div class="col">
                    <BootstrapButton ButtonType="BootstrapButtonType.Warning" OnClick="()=> EditItem(EmployeeListDto)">Edit</BootstrapButton>
                    <BootstrapButton ButtonType="BootstrapButtonType.Danger" OnClick="OnCancel">Back</BootstrapButton>
                </div>
            </div>
        </div>
}


@code {
    [Parameter] public int? Id { get; set; }
    EmployeeEditDto? Employee { get; set; }
    EmployeeListDto EmployeeListDto { get; set; }

    protected override async Task OnInitializedAsync() {
        if (Id == null) {
            Employee = new();
        } else {
            Employee = await httpClient.GetFromJsonAsync<EmployeeEditDto>($"employee/{Id}");
            if (Employee is null) {
                //TODO: If employee is null
            }
            EmployeeListDto = new EmployeeListDto {
                    Id = Employee.Id,
                    Name = Employee.Name,
                    Surname = Employee.Surname,
                    SalaryPerMonth = Employee.SalaryPerMonth,
                    Type = Employee.Type,
                    HireDateStart = Employee.HireDateStart,
                    HireDateEnd = Employee.HireDateEnd,
            };
        }
    }

    private void OnCancel() {
        navigationManager.NavigateTo("employeelist");
    }

    private void EditItem(EmployeeListDto customer) {
        navigationManager.NavigateTo($"employeelist/edit/{customer.Id}");
    }
}

