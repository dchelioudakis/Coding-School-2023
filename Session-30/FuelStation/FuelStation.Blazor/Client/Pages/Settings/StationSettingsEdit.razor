@page "/stationSettings/edit/{Id:int?}"
@using FuelStation.Blazor.Shared.DTO.Customer;
@using FuelStation.Blazor.Shared.DTO.Settings;
@using FuelStation.Model.OptionsModel;
@using Microsoft.AspNetCore.Authorization;
@using System.Text.Json;
@using System.Xml.Serialization;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@attribute [Authorize(Roles = "Manager")]

<PageTitle>Station Settings</PageTitle>


    <h3>Station Settings</h3>


@if (StationSettings == null) {
<div class="spinner-border text-secondary" role="status">
    <span class="sr-only"></span>
</div>
   
} else {

    <EditForm Model="StationSettings" OnValidSubmit="OnSave">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row">
            <div class="col-md-3">
                <label class="form-label">Rental</label>
                <InputNumber class="form-control" @bind-Value="@StationSettings.RentingCost" />
            </div>
            <div class="col-md-3">
                <label class="form-label">Min Managers</label>
                <InputNumber class="form-control" @bind-Value="@StationSettings.ManagerMinCount" disabled/>
            </div>
            <div class="col-md-3">
                <label class="form-label">Max Managers</label>
                <InputNumber class="form-control" @bind-Value="@StationSettings.ManagerMaxCount" disabled />
            </div>
            <div class="col-md-3">
                <label class="form-label">Min Cashiers</label>
                <InputNumber class="form-control" @bind-Value="@StationSettings.CashierMinCount" disabled />
            </div>

        </div>
        <div class="row">
            <div class="col-md-3">
                <label class="form-label">Max Cashiers</label>
                <InputNumber class="form-control" @bind-Value="@StationSettings.CashierMaxCount" disabled />
            </div>
            <div class="col-md-3">
                <label class="form-label">Min Staff</label>
                <InputNumber class="form-control" @bind-Value="@StationSettings.StaffMinCount" disabled />
            </div>
            <div class="col-md-3">
                <label class="form-label">Max Staff</label>
                <InputNumber class="form-control" @bind-Value="@StationSettings.StaffMaxCount" disabled />
            </div>
        </div>
         <div class="row mt-2">
            <div class="col">
                <BootstrapButton ButtonType="BootstrapButtonType.Success" IsSubmit="true">Save</BootstrapButton>
                @*<BootstrapButton ButtonType="BootstrapButtonType.Secondary" OnClick="OnCancel">Back</BootstrapButton>*@
            </div>
        </div>
    </EditForm>
}


@code {
    [Parameter] public int? Id { get; set; }
    StationSettingsDto? StationSettings { get; set; }

    protected override async Task OnInitializedAsync() {
        
        StationSettings = await httpClient.GetFromJsonAsync<StationSettingsDto>($"stationSettings/{1}");
        if (StationSettings is null) {
            //TODO: Handle if customer is null
        }
        
    }


    private async Task OnSave() {
        HttpResponseMessage? response = null;
       
        response = await httpClient.PutAsJsonAsync("StationSettings", StationSettings);
        
        if (response.IsSuccessStatusCode) {
            await jsRuntime.InvokeVoidAsync("alert", "Settings Saved");
        } 
        else {
            var error = await response.Content.ReadAsStringAsync();
            await jsRuntime.InvokeVoidAsync("alert", error);
        }
    }
}
