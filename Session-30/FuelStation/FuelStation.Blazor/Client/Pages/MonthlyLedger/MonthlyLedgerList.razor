@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@using FuelStation.Model
@page "/monthlyLedger"
<h3>Items</h3>

@if (isLoading) {
    <p>Loading ...</p>
} else {
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Year</th>
                <th>Month</th>
                <th>Income</th>
                <th>Expenses</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var monthlyLedger in monthlyLedgerList) {
                <tr>
                    <td>@monthlyLedger.Year</td>
                    <td>@monthlyLedger.Month</td>
                    <td>@monthlyLedger.Income</td>
                    <td>@monthlyLedger.Expenses</td>
                    <td>@monthlyLedger.Total</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<MonthlyLedger> monthlyLedgerList = new();
    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync() {
        await LoadMonthlyLedgerList();
        isLoading = false;
    }

    private async Task LoadMonthlyLedgerList() {
        monthlyLedgerList = await httpClient.GetFromJsonAsync<List<MonthlyLedger>>("monthlyledger");
    }
}