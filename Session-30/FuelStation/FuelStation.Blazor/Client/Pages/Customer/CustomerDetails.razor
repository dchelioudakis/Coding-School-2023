@page "/customerlist/details/{Id:int?}"
@using FuelStation.Blazor.Shared.DTO.Customer;
@using Microsoft.AspNetCore.Authorization;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@attribute [Authorize(Roles = "Manager, Cashier")]

<PageTitle>Customer Details</PageTitle>
<h3>Customer Details</h3>

@if (Customer == null) {
<div class="spinner-border text-secondary" role="status">
    <span class="sr-only"></span>
</div>
   
} else {
    
    <div class="row">
        <div class="col-md-4">
            <label class="form-label">Name</label>
            <InputText class="form-control" @bind-Value="@Customer.Name" disabled/>
        </div>
        <div class="col-md-4">
            <label class="form-label">Surname</label>
            <InputText class="form-control" @bind-Value="@Customer.Surname" disabled />
        </div>
        <div class="col-md-4">
            <label class="form-label">Card Number</label>
            <InputText class="form-control" @bind-Value="@Customer.CardNumber" disabled />
        </div>

    </div>
        <div class="row mt-2">
        <div class="col">
            <BootstrapButton ButtonType="BootstrapButtonType.Warning" OnClick="()=> EditItem(CustomerListDto)">Edit</BootstrapButton>
            <BootstrapButton ButtonType="BootstrapButtonType.Secondary" OnClick="OnCancel">Back</BootstrapButton>
        </div>
    </div>

    <br /><br />
    @if (Customer.Transactions.Count() > 0)
    {
        <h4>Customer Transactions</h4>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Payment Method</th>
                    <th>TotalValue</th>
                    <th>Employee</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in Customer.Transactions)
                {
                    <tr>
                        <td>@transaction.Date</td>
                        <td>@transaction.PaymentMethod</td>
                        <td>@transaction.TotalValue</td>
                        <td>@transaction.Employee.Surname @transaction.Employee.Name</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    
    
}


@code {
    [Parameter] public int? Id { get; set; }
    CustomerDetailsDto? Customer { get; set; }
    CustomerListDto? CustomerListDto { get; set; }


    protected override async Task OnInitializedAsync() {
        if (Id == null) {

        } else {
            Customer = await httpClient.GetFromJsonAsync<CustomerDetailsDto>($"customerlist/details/{Id}");
            if (Customer is null) {
                //TODO: Handle if customer is null
            }
            CustomerListDto = new CustomerListDto
                {
                    Id = Customer.Id,
                    Name = Customer.Name,
                    Surname = Customer.Surname,
                    CardNumber = Customer.CardNumber,
                };
        }
    }

    private void OnCancel() {
        navigationManager.NavigateTo("customerList");
    }

    private void EditItem(CustomerListDto customer) {
        navigationManager.NavigateTo($"customerlist/edit/{customer.Id}");
    }
}
